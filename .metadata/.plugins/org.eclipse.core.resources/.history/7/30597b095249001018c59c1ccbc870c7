/*
 * uart.c
 *
 *  Created on: Jun 14, 2025
 *      Author: moreirad
 */
#include "uart.h"
#include "stm32l4xx.h"

#define GPIOAEN					(1U << 0U)
#define UART2EN					(1U << 17U)
#define DEBUG_UART_BAUDRATE		115200U

#define SYSTEM_CLK				4000000U // 4Mhz
#define APB1_CLK				SYSTEM_CLK

#define CR1_UE						(1U << 0U)
#define CR1_TE						(1U << 3U)

static uint16_t UART_Compute_Baudrate(uint32_t peripheral_clk, uint32_t baudrate);
static void UART_Set_Baudrate(uint32_t peripheral_clk, uint32_t baudrate);

void Debug_UART_Init(void)
{
	/* Enable clock access to GPIOA */
	RCC->AHB1ENR |= GPIOAEN;

	/* Set the mode of PA2 to alternate function mode */
	GPIOA->MODER &= ~(1U << 4U);
	GPIOA->MODER |= (1U << 5U);

	/* Set alternate function type to AF7 (UART2_TX) */
	GPIOA->AFR[0] |= (1U << 8U);
	GPIOA->AFR[0] |= (1U << 9U);
	GPIOA->AFR[0] |= (1U << 10U);
	GPIOA->AFR[0] &= ~(1U << 11U);

	/* Enable clock access to UART2 */
	RCC->APB1ENR1 |= UART2EN;

	/* Configure UART baudrate */
	UART_Set_Baudrate(APB1_CLK, DEBUG_UART_BAUDRATE);

	/* Configure transfer direction */
	USART1->CR1 |= CR1_TE;

	/* Enable UART mode */
	USART2->CR1 |= CR1_UE;
}

static uint16_t UART_Compute_Baudrate(uint32_t peripheral_clk, uint32_t baudrate)
{
	return ( ( peripheral_clk + ( baudrate / 2U ) ) / baudrate );
}

static void UART_Set_Baudrate(uint32_t peripheral_clk, uint32_t baudrate)
{
	USART2->BRR = UART_Compute_Baudrate(peripheral_clk, baudrate);
}
